/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface FeeResponse
 */
export interface FeeResponse {
    /**
     * Amount of the Xendit fee for this transaction.
     * @type {number}
     * @memberof FeeResponse
     */
    xenditFee: number;
    /**
     * Amount of the VAT for this transaction.
     * @type {number}
     * @memberof FeeResponse
     */
    valueAddedTax: number;
    /**
     * Amount of the Xendit Withholding Tax for this transaction if applicable. See [Tax Documentation](https://docs.xendit.co/fees-and-vat#vat) for more information.
     * @type {number}
     * @memberof FeeResponse
     */
    xenditWithholdingTax?: number;
    /**
     * Amount of the 3rd Party Withholding Tax for this transaction if applicable. 3rd party example: Bank
     * @type {number}
     * @memberof FeeResponse
     */
    thirdPartyWithholdingTax?: number;
    /**
     * 
     * @type {string}
     * @memberof FeeResponse
     */
    status?: FeeResponseStatusEnum;
}


/**
 * @export
 */
export const FeeResponseStatusEnum = {
    Pending: 'PENDING',
    Completed: 'COMPLETED',
    Canceled: 'CANCELED',
    Reversed: 'REVERSED'
} as const;
export type FeeResponseStatusEnum = typeof FeeResponseStatusEnum[keyof typeof FeeResponseStatusEnum];


/**
 * Check if a given object implements the FeeResponse interface.
 */
export function instanceOfFeeResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "xenditFee" in value;
    isInstance = isInstance && "valueAddedTax" in value;

    return isInstance;
}

export function FeeResponseFromJSON(json: any): FeeResponse {
    return FeeResponseFromJSONTyped(json, false);
}

export function FeeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeeResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'xenditFee': json['xendit_fee'],
        'valueAddedTax': json['value_added_tax'],
        'xenditWithholdingTax': !exists(json, 'xendit_withholding_tax') ? undefined : json['xendit_withholding_tax'],
        'thirdPartyWithholdingTax': !exists(json, 'third_party_withholding_tax') ? undefined : json['third_party_withholding_tax'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function FeeResponseToJSON(value?: FeeResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'xendit_fee': value.xenditFee,
        'value_added_tax': value.valueAddedTax,
        'xendit_withholding_tax': value.xenditWithholdingTax,
        'third_party_withholding_tax': value.thirdPartyWithholdingTax,
        'status': value.status,
    };
}

