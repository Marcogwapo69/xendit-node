/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface ServerError
 */
export interface ServerError {
    /**
     * 
     * @type {number}
     * @memberof ServerError
     */
    statusCode: number;
    /**
     * 
     * @type {string}
     * @memberof ServerError
     */
    error: string;
    /**
     * 
     * @type {string}
     * @memberof ServerError
     */
    message: string;
}

/**
 * Check if a given object implements the ServerError interface.
 */
export function instanceOfServerError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "statusCode" in value;
    isInstance = isInstance && "error" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function ServerErrorFromJSON(json: any): ServerError {
    return ServerErrorFromJSONTyped(json, false);
}

export function ServerErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServerError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'statusCode': json['status_code'],
        'error': json['error'],
        'message': json['message'],
    };
}

export function ServerErrorToJSON(value?: ServerError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status_code': value.statusCode,
        'error': value.error,
        'message': value.message,
    };
}

