/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface CreateCustomer400Response
 */
export interface CreateCustomer400Response {
    /**
     * 
     * @type {string}
     * @memberof CreateCustomer400Response
     */
    errorCode: CreateCustomer400ResponseErrorCodeEnum;
    /**
     * 
     * @type {any}
     * @memberof CreateCustomer400Response
     */
    message: any | null;
    /**
     * 
     * @type {Array<object>}
     * @memberof CreateCustomer400Response
     */
    errors?: Array<object>;
}


/**
 * @export
 */
export const CreateCustomer400ResponseErrorCodeEnum = {
    DuplicateEndCustomerError: 'DUPLICATE_END_CUSTOMER_ERROR',
    ApiValidationError: 'API_VALIDATION_ERROR'
} as const;
export type CreateCustomer400ResponseErrorCodeEnum = typeof CreateCustomer400ResponseErrorCodeEnum[keyof typeof CreateCustomer400ResponseErrorCodeEnum];


/**
 * Check if a given object implements the CreateCustomer400Response interface.
 */
export function instanceOfCreateCustomer400Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "errorCode" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function CreateCustomer400ResponseFromJSON(json: any): CreateCustomer400Response {
    return CreateCustomer400ResponseFromJSONTyped(json, false);
}

export function CreateCustomer400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCustomer400Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': json['error_code'],
        'message': json['message'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
    };
}

export function CreateCustomer400ResponseToJSON(value?: CreateCustomer400Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error_code': value.errorCode,
        'message': value.message,
        'errors': value.errors,
    };
}

