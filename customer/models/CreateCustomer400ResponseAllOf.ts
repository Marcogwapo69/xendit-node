/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface CreateCustomer400ResponseAllOf
 */
export interface CreateCustomer400ResponseAllOf {
    /**
     * 
     * @type {string}
     * @memberof CreateCustomer400ResponseAllOf
     */
    errorCode?: CreateCustomer400ResponseAllOfErrorCodeEnum;
    /**
     * 
     * @type {any}
     * @memberof CreateCustomer400ResponseAllOf
     */
    message?: any | null;
}


/**
 * @export
 */
export const CreateCustomer400ResponseAllOfErrorCodeEnum = {
    DuplicateEndCustomerError: 'DUPLICATE_END_CUSTOMER_ERROR',
    ApiValidationError: 'API_VALIDATION_ERROR'
} as const;
export type CreateCustomer400ResponseAllOfErrorCodeEnum = typeof CreateCustomer400ResponseAllOfErrorCodeEnum[keyof typeof CreateCustomer400ResponseAllOfErrorCodeEnum];


/**
 * Check if a given object implements the CreateCustomer400ResponseAllOf interface.
 */
export function instanceOfCreateCustomer400ResponseAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateCustomer400ResponseAllOfFromJSON(json: any): CreateCustomer400ResponseAllOf {
    return CreateCustomer400ResponseAllOfFromJSONTyped(json, false);
}

export function CreateCustomer400ResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCustomer400ResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'error_code') ? undefined : json['error_code'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function CreateCustomer400ResponseAllOfToJSON(value?: CreateCustomer400ResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error_code': value.errorCode,
        'message': value.message,
    };
}

