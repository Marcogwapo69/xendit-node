/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface EmploymentDetail
 */
export interface EmploymentDetail {
    /**
     * Name of employer
     * @type {string}
     * @memberof EmploymentDetail
     */
    employerName?: string | null;
    /**
     * Industry or nature of business
     * @type {string}
     * @memberof EmploymentDetail
     */
    natureOfBusiness?: string | null;
    /**
     * Occupation or title
     * @type {string}
     * @memberof EmploymentDetail
     */
    roleDescription?: string | null;
}

/**
 * Check if a given object implements the EmploymentDetail interface.
 */
export function instanceOfEmploymentDetail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EmploymentDetailFromJSON(json: any): EmploymentDetail {
    return EmploymentDetailFromJSONTyped(json, false);
}

export function EmploymentDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'employerName': !exists(json, 'employer_name') ? undefined : json['employer_name'],
        'natureOfBusiness': !exists(json, 'nature_of_business') ? undefined : json['nature_of_business'],
        'roleDescription': !exists(json, 'role_description') ? undefined : json['role_description'],
    };
}

export function EmploymentDetailToJSON(value?: EmploymentDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'employer_name': value.employerName,
        'nature_of_business': value.natureOfBusiness,
        'role_description': value.roleDescription,
    };
}

