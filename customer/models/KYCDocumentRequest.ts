/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { KYCDocumentSubType } from './KYCDocumentSubType';
import {
    KYCDocumentSubTypeFromJSON,
    KYCDocumentSubTypeFromJSONTyped,
    KYCDocumentSubTypeToJSON,
} from './KYCDocumentSubType';
import type { KYCDocumentType } from './KYCDocumentType';
import {
    KYCDocumentTypeFromJSON,
    KYCDocumentTypeFromJSONTyped,
    KYCDocumentTypeToJSON,
} from './KYCDocumentType';

/**
 * 
 * @export
 * @interface KYCDocumentRequest
 */
export interface KYCDocumentRequest {
    /**
     * ISO3166-2 country code
     * @type {string}
     * @memberof KYCDocumentRequest
     */
    country?: string | null;
    /**
     * 
     * @type {KYCDocumentType}
     * @memberof KYCDocumentRequest
     */
    type?: KYCDocumentType;
    /**
     * 
     * @type {KYCDocumentSubType}
     * @memberof KYCDocumentRequest
     */
    subType?: KYCDocumentSubType | null;
    /**
     * 
     * @type {string}
     * @memberof KYCDocumentRequest
     */
    documentName?: string;
    /**
     * 
     * @type {string}
     * @memberof KYCDocumentRequest
     */
    documentNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof KYCDocumentRequest
     */
    expiresAt?: string;
    /**
     * 
     * @type {string}
     * @memberof KYCDocumentRequest
     */
    holderName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof KYCDocumentRequest
     */
    documentImages?: Array<string>;
}

/**
 * Check if a given object implements the KYCDocumentRequest interface.
 */
export function instanceOfKYCDocumentRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KYCDocumentRequestFromJSON(json: any): KYCDocumentRequest {
    return KYCDocumentRequestFromJSONTyped(json, false);
}

export function KYCDocumentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): KYCDocumentRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': !exists(json, 'country') ? undefined : json['country'],
        'type': !exists(json, 'type') ? undefined : KYCDocumentTypeFromJSON(json['type']),
        'subType': !exists(json, 'sub_type') ? undefined : KYCDocumentSubTypeFromJSON(json['sub_type']),
        'documentName': !exists(json, 'document_name') ? undefined : json['document_name'],
        'documentNumber': !exists(json, 'document_number') ? undefined : json['document_number'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : json['expires_at'],
        'holderName': !exists(json, 'holder_name') ? undefined : json['holder_name'],
        'documentImages': !exists(json, 'document_images') ? undefined : json['document_images'],
    };
}

export function KYCDocumentRequestToJSON(value?: KYCDocumentRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'type': KYCDocumentTypeToJSON(value.type),
        'sub_type': KYCDocumentSubTypeToJSON(value.subType),
        'document_name': value.documentName,
        'document_number': value.documentNumber,
        'expires_at': value.expiresAt,
        'holder_name': value.holderName,
        'document_images': value.documentImages,
    };
}

