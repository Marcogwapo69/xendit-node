/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * An object representing an address with various properties.
 * @export
 * @interface AddressObject
 */
export interface AddressObject {
    /**
     * The country where the address is located.
     * @type {string}
     * @memberof AddressObject
     */
    country?: string | null;
    /**
     * The first line of the street address.
     * @type {string}
     * @memberof AddressObject
     */
    streetLine1?: string | null;
    /**
     * The second line of the street address.
     * @type {string}
     * @memberof AddressObject
     */
    streetLine2?: string | null;
    /**
     * The city or locality within the address.
     * @type {string}
     * @memberof AddressObject
     */
    city?: string | null;
    /**
     * The province or region within the country.
     * @type {string}
     * @memberof AddressObject
     */
    province?: string | null;
    /**
     * The state or administrative division within the country.
     * @type {string}
     * @memberof AddressObject
     */
    state?: string | null;
    /**
     * The postal code or ZIP code for the address.
     * @type {string}
     * @memberof AddressObject
     */
    postalCode?: string | null;
}

/**
 * Check if a given object implements the AddressObject interface.
 */
export function instanceOfAddressObject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AddressObjectFromJSON(json: any): AddressObject {
    return AddressObjectFromJSONTyped(json, false);
}

export function AddressObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': !exists(json, 'country') ? undefined : json['country'],
        'streetLine1': !exists(json, 'street_line1') ? undefined : json['street_line1'],
        'streetLine2': !exists(json, 'street_line2') ? undefined : json['street_line2'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'province': !exists(json, 'province') ? undefined : json['province'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'postalCode': !exists(json, 'postal_code') ? undefined : json['postal_code'],
    };
}

export function AddressObjectToJSON(value?: AddressObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'street_line1': value.streetLine1,
        'street_line2': value.streetLine2,
        'city': value.city,
        'province': value.province,
        'state': value.state,
        'postal_code': value.postalCode,
    };
}

