/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * An object representing alternative display of a VA.
 * @export
 * @interface AlternativeDisplayItem
 */
export interface AlternativeDisplayItem {
    /**
     * Represent type of alternative display.
     * @type {string}
     * @memberof AlternativeDisplayItem
     */
    type?: string;
    /**
     * Represent value of alternative display value.
     * @type {string}
     * @memberof AlternativeDisplayItem
     */
    value?: string;
}

/**
 * Check if a given object implements the AlternativeDisplayItem interface.
 */
export function instanceOfAlternativeDisplayItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AlternativeDisplayItemFromJSON(json: any): AlternativeDisplayItem {
    return AlternativeDisplayItemFromJSONTyped(json, false);
}

export function AlternativeDisplayItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeDisplayItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function AlternativeDisplayItemToJSON(value?: AlternativeDisplayItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'value': value.value,
    };
}

