/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * An object representing an item within an invoice.
 * @export
 * @interface InvoiceItem
 */
export interface InvoiceItem {
    /**
     * The name of the item.
     * @type {string}
     * @memberof InvoiceItem
     */
    name: string;
    /**
     * The price of the item.
     * @type {number}
     * @memberof InvoiceItem
     */
    price: number;
    /**
     * The quantity of the item. Must be greater than or equal to 0.
     * @type {number}
     * @memberof InvoiceItem
     */
    quantity: number;
    /**
     * The reference ID of the item.
     * @type {string}
     * @memberof InvoiceItem
     */
    referenceId?: string;
    /**
     * The URL associated with the item.
     * @type {string}
     * @memberof InvoiceItem
     */
    url?: string;
    /**
     * The category of the item.
     * @type {string}
     * @memberof InvoiceItem
     */
    category?: string;
}

/**
 * Check if a given object implements the InvoiceItem interface.
 */
export function instanceOfInvoiceItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "quantity" in value;

    return isInstance;
}

export function InvoiceItemFromJSON(json: any): InvoiceItem {
    return InvoiceItemFromJSONTyped(json, false);
}

export function InvoiceItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'price': json['price'],
        'quantity': json['quantity'],
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'category': !exists(json, 'category') ? undefined : json['category'],
    };
}

export function InvoiceItemToJSON(value?: InvoiceItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'price': value.price,
        'quantity': value.quantity,
        'reference_id': value.referenceId,
        'url': value.url,
        'category': value.category,
    };
}

