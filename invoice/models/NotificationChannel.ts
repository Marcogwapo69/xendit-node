/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */


/**
 * Representing a notification channel for sending messages.
 * @export
 */
export const NotificationChannel = {
    Email: 'email',
    Sms: 'sms',
    Whatsapp: 'whatsapp',
    Viber: 'viber',
    XenditEnumDefaultFallback: "UNKNOWN_ENUM_VALUE"
} as const;
export type NotificationChannel = typeof NotificationChannel[keyof typeof NotificationChannel];


export function NotificationChannelFromJSON(json: any): NotificationChannel {
    return NotificationChannelFromJSONTyped(json, false);
}

export function NotificationChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationChannel {
    if (json !== "" || json !== null) {
        const key = Object.keys(NotificationChannel)[Object.values(NotificationChannel).indexOf(json)]
        return NotificationChannel[key] === undefined ?
            NotificationChannel['XenditEnumDefaultFallback'] : NotificationChannel[key]
    }
    return json as NotificationChannel;
}

export function NotificationChannelToJSON(value?: NotificationChannel | null): any {
    return value as any;
}

