/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * EWallet Channel Properties
 * @export
 * @interface EWalletChannelProperties
 */
export interface EWalletChannelProperties {
    /**
     * URL where the end-customer is redirected if the authorization is successful
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    successReturnUrl?: string;
    /**
     * URL where the end-customer is redirected if the authorization failed
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    failureReturnUrl?: string;
    /**
     * URL where the end-customer is redirected if the authorization is pending
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    pendingReturnUrl?: string;
    /**
     * URL where the end-customer is redirected if the authorization cancelled
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    cancelReturnUrl?: string;
    /**
     * Mobile number of customer in E.164 format (e.g. +628123123123). For OVO one time payment use only.
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    mobileNumber?: string;
    /**
     * REDEEM_NONE will not use any point, REDEEM_ALL will use all available points before cash balance is used. For OVO and ShopeePay tokenized payment use only.
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    redeemPoints?: string;
    /**
     * Available for JENIUSPAY only
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    cashtag?: string;
    /**
     * Available only for OVO
     * @type {string}
     * @memberof EWalletChannelProperties
     */
    promotionLabel?: string;
}

/**
 * Check if a given object implements the EWalletChannelProperties interface.
 */
export function instanceOfEWalletChannelProperties(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EWalletChannelPropertiesFromJSON(json: any): EWalletChannelProperties {
    return EWalletChannelPropertiesFromJSONTyped(json, false);
}

export function EWalletChannelPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EWalletChannelProperties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'successReturnUrl': !exists(json, 'success_return_url') ? undefined : json['success_return_url'],
        'failureReturnUrl': !exists(json, 'failure_return_url') ? undefined : json['failure_return_url'],
        'pendingReturnUrl': !exists(json, 'pending_return_url') ? undefined : json['pending_return_url'],
        'cancelReturnUrl': !exists(json, 'cancel_return_url') ? undefined : json['cancel_return_url'],
        'mobileNumber': !exists(json, 'mobile_number') ? undefined : json['mobile_number'],
        'redeemPoints': !exists(json, 'redeem_points') ? undefined : json['redeem_points'],
        'cashtag': !exists(json, 'cashtag') ? undefined : json['cashtag'],
        'promotionLabel': !exists(json, 'promotion_label') ? undefined : json['promotion_label'],
    };
}

export function EWalletChannelPropertiesToJSON(value?: EWalletChannelProperties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success_return_url': value.successReturnUrl,
        'failure_return_url': value.failureReturnUrl,
        'pending_return_url': value.pendingReturnUrl,
        'cancel_return_url': value.cancelReturnUrl,
        'mobile_number': value.mobileNumber,
        'redeem_points': value.redeemPoints,
        'cashtag': value.cashtag,
        'promotion_label': value.promotionLabel,
    };
}

