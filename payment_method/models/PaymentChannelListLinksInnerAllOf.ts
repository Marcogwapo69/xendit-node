/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface PaymentChannelListLinksInnerAllOf
 */
export interface PaymentChannelListLinksInnerAllOf {
    /**
     * Target URI that should contain a target to Internationalized Resource Identifiers (IRI)
     * @type {string}
     * @memberof PaymentChannelListLinksInnerAllOf
     */
    href?: string;
    /**
     * The link relation type described how the current context (source) is related to target resource
     * @type {string}
     * @memberof PaymentChannelListLinksInnerAllOf
     */
    rel?: PaymentChannelListLinksInnerAllOfRelEnum;
    /**
     * The HTTP method to be used to call `href`
     * @type {string}
     * @memberof PaymentChannelListLinksInnerAllOf
     */
    method?: string;
}


/**
 * @export
 */
export const PaymentChannelListLinksInnerAllOfRelEnum = {
    First: 'first',
    Last: 'last',
    Next: 'next',
    Prev: 'prev'
} as const;
export type PaymentChannelListLinksInnerAllOfRelEnum = typeof PaymentChannelListLinksInnerAllOfRelEnum[keyof typeof PaymentChannelListLinksInnerAllOfRelEnum];


/**
 * Check if a given object implements the PaymentChannelListLinksInnerAllOf interface.
 */
export function instanceOfPaymentChannelListLinksInnerAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaymentChannelListLinksInnerAllOfFromJSON(json: any): PaymentChannelListLinksInnerAllOf {
    return PaymentChannelListLinksInnerAllOfFromJSONTyped(json, false);
}

export function PaymentChannelListLinksInnerAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentChannelListLinksInnerAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'href': !exists(json, 'href') ? undefined : json['href'],
        'rel': !exists(json, 'rel') ? undefined : json['rel'],
        'method': !exists(json, 'method') ? undefined : json['method'],
    };
}

export function PaymentChannelListLinksInnerAllOfToJSON(value?: PaymentChannelListLinksInnerAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'href': value.href,
        'rel': value.rel,
        'method': value.method,
    };
}

