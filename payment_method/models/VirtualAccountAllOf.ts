/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { VirtualAccountAlternativeDisplay } from './VirtualAccountAlternativeDisplay';
import {
    VirtualAccountAlternativeDisplayFromJSON,
    VirtualAccountAlternativeDisplayFromJSONTyped,
    VirtualAccountAlternativeDisplayToJSON,
} from './VirtualAccountAlternativeDisplay';

/**
 * 
 * @export
 * @interface VirtualAccountAllOf
 */
export interface VirtualAccountAllOf {
    /**
     * 
     * @type {Array<VirtualAccountAlternativeDisplay>}
     * @memberof VirtualAccountAllOf
     */
    alternativeDisplays?: Array<VirtualAccountAlternativeDisplay>;
}

/**
 * Check if a given object implements the VirtualAccountAllOf interface.
 */
export function instanceOfVirtualAccountAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VirtualAccountAllOfFromJSON(json: any): VirtualAccountAllOf {
    return VirtualAccountAllOfFromJSONTyped(json, false);
}

export function VirtualAccountAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): VirtualAccountAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alternativeDisplays': !exists(json, 'alternative_displays') ? undefined : ((json['alternative_displays'] as Array<any>).map(VirtualAccountAlternativeDisplayFromJSON)),
    };
}

export function VirtualAccountAllOfToJSON(value?: VirtualAccountAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alternative_displays': value.alternativeDisplays === undefined ? undefined : ((value.alternativeDisplays as Array<any>).map(VirtualAccountAlternativeDisplayToJSON)),
    };
}

