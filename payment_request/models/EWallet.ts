/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { EWalletAccount } from './EWalletAccount';
import {
    EWalletAccountFromJSON,
    EWalletAccountFromJSONTyped,
    EWalletAccountToJSON,
} from './EWalletAccount';
import type { EWalletChannelCode } from './EWalletChannelCode';
import {
    EWalletChannelCodeFromJSON,
    EWalletChannelCodeFromJSONTyped,
    EWalletChannelCodeToJSON,
} from './EWalletChannelCode';
import type { EWalletChannelProperties } from './EWalletChannelProperties';
import {
    EWalletChannelPropertiesFromJSON,
    EWalletChannelPropertiesFromJSONTyped,
    EWalletChannelPropertiesToJSON,
} from './EWalletChannelProperties';

/**
 * Ewallet Payment Method Details
 * @export
 * @interface EWallet
 */
export interface EWallet {
    /**
     * 
     * @type {EWalletChannelCode}
     * @memberof EWallet
     */
    channelCode?: EWalletChannelCode;
    /**
     * 
     * @type {EWalletChannelProperties}
     * @memberof EWallet
     */
    channelProperties?: EWalletChannelProperties;
    /**
     * 
     * @type {EWalletAccount}
     * @memberof EWallet
     */
    account?: EWalletAccount;
}

/**
 * Check if a given object implements the EWallet interface.
 */
export function instanceOfEWallet(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EWalletFromJSON(json: any): EWallet {
    return EWalletFromJSONTyped(json, false);
}

export function EWalletFromJSONTyped(json: any, ignoreDiscriminator: boolean): EWallet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelCode': !exists(json, 'channel_code') ? undefined : EWalletChannelCodeFromJSON(json['channel_code']),
        'channelProperties': !exists(json, 'channel_properties') ? undefined : EWalletChannelPropertiesFromJSON(json['channel_properties']),
        'account': !exists(json, 'account') ? undefined : EWalletAccountFromJSON(json['account']),
    };
}

export function EWalletToJSON(value?: EWallet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel_code': EWalletChannelCodeToJSON(value.channelCode),
        'channel_properties': EWalletChannelPropertiesToJSON(value.channelProperties),
        'account': EWalletAccountToJSON(value.account),
    };
}

