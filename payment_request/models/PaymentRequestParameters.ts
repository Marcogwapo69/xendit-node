/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { PaymentMethodParameters } from './PaymentMethodParameters';
import {
    PaymentMethodParametersFromJSON,
    PaymentMethodParametersFromJSONTyped,
    PaymentMethodParametersToJSON,
} from './PaymentMethodParameters';
import type { PaymentRequestBasketItem } from './PaymentRequestBasketItem';
import {
    PaymentRequestBasketItemFromJSON,
    PaymentRequestBasketItemFromJSONTyped,
    PaymentRequestBasketItemToJSON,
} from './PaymentRequestBasketItem';
import type { PaymentRequestCaptureMethod } from './PaymentRequestCaptureMethod';
import {
    PaymentRequestCaptureMethodFromJSON,
    PaymentRequestCaptureMethodFromJSONTyped,
    PaymentRequestCaptureMethodToJSON,
} from './PaymentRequestCaptureMethod';
import type { PaymentRequestCurrency } from './PaymentRequestCurrency';
import {
    PaymentRequestCurrencyFromJSON,
    PaymentRequestCurrencyFromJSONTyped,
    PaymentRequestCurrencyToJSON,
} from './PaymentRequestCurrency';
import type { PaymentRequestInitiator } from './PaymentRequestInitiator';
import {
    PaymentRequestInitiatorFromJSON,
    PaymentRequestInitiatorFromJSONTyped,
    PaymentRequestInitiatorToJSON,
} from './PaymentRequestInitiator';
import type { PaymentRequestParametersChannelProperties } from './PaymentRequestParametersChannelProperties';
import {
    PaymentRequestParametersChannelPropertiesFromJSON,
    PaymentRequestParametersChannelPropertiesFromJSONTyped,
    PaymentRequestParametersChannelPropertiesToJSON,
} from './PaymentRequestParametersChannelProperties';
import type { PaymentRequestShippingInformation } from './PaymentRequestShippingInformation';
import {
    PaymentRequestShippingInformationFromJSON,
    PaymentRequestShippingInformationFromJSONTyped,
    PaymentRequestShippingInformationToJSON,
} from './PaymentRequestShippingInformation';

/**
 * 
 * @export
 * @interface PaymentRequestParameters
 */
export interface PaymentRequestParameters {
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestParameters
     */
    referenceId?: string;
    /**
     * 
     * @type {number}
     * @memberof PaymentRequestParameters
     */
    amount?: number;
    /**
     * 
     * @type {PaymentRequestCurrency}
     * @memberof PaymentRequestParameters
     */
    currency: PaymentRequestCurrency;
    /**
     * 
     * @type {PaymentMethodParameters}
     * @memberof PaymentRequestParameters
     */
    paymentMethod?: PaymentMethodParameters;
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestParameters
     */
    description?: string | null;
    /**
     * 
     * @type {PaymentRequestCaptureMethod}
     * @memberof PaymentRequestParameters
     */
    captureMethod?: PaymentRequestCaptureMethod | null;
    /**
     * 
     * @type {PaymentRequestInitiator}
     * @memberof PaymentRequestParameters
     */
    initiator?: PaymentRequestInitiator | null;
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestParameters
     */
    paymentMethodId?: string;
    /**
     * 
     * @type {PaymentRequestParametersChannelProperties}
     * @memberof PaymentRequestParameters
     */
    channelProperties?: PaymentRequestParametersChannelProperties;
    /**
     * 
     * @type {PaymentRequestShippingInformation}
     * @memberof PaymentRequestParameters
     */
    shippingInformation?: PaymentRequestShippingInformation | null;
    /**
     * 
     * @type {Array<PaymentRequestBasketItem>}
     * @memberof PaymentRequestParameters
     */
    items?: Array<PaymentRequestBasketItem> | null;
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestParameters
     */
    customerId?: string | null;
    /**
     * 
     * @type {object}
     * @memberof PaymentRequestParameters
     */
    customer?: object | null;
    /**
     * 
     * @type {object}
     * @memberof PaymentRequestParameters
     */
    metadata?: object | null;
}

/**
 * Check if a given object implements the PaymentRequestParameters interface.
 */
export function instanceOfPaymentRequestParameters(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "currency" in value;

    return isInstance;
}

export function PaymentRequestParametersFromJSON(json: any): PaymentRequestParameters {
    return PaymentRequestParametersFromJSONTyped(json, false);
}

export function PaymentRequestParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentRequestParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currency': PaymentRequestCurrencyFromJSON(json['currency']),
        'paymentMethod': !exists(json, 'payment_method') ? undefined : PaymentMethodParametersFromJSON(json['payment_method']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'captureMethod': !exists(json, 'capture_method') ? undefined : PaymentRequestCaptureMethodFromJSON(json['capture_method']),
        'initiator': !exists(json, 'initiator') ? undefined : PaymentRequestInitiatorFromJSON(json['initiator']),
        'paymentMethodId': !exists(json, 'payment_method_id') ? undefined : json['payment_method_id'],
        'channelProperties': !exists(json, 'channel_properties') ? undefined : PaymentRequestParametersChannelPropertiesFromJSON(json['channel_properties']),
        'shippingInformation': !exists(json, 'shipping_information') ? undefined : PaymentRequestShippingInformationFromJSON(json['shipping_information']),
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(PaymentRequestBasketItemFromJSON)),
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'customer': !exists(json, 'customer') ? undefined : json['customer'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function PaymentRequestParametersToJSON(value?: PaymentRequestParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reference_id': value.referenceId,
        'amount': value.amount,
        'currency': PaymentRequestCurrencyToJSON(value.currency),
        'payment_method': PaymentMethodParametersToJSON(value.paymentMethod),
        'description': value.description,
        'capture_method': PaymentRequestCaptureMethodToJSON(value.captureMethod),
        'initiator': PaymentRequestInitiatorToJSON(value.initiator),
        'payment_method_id': value.paymentMethodId,
        'channel_properties': PaymentRequestParametersChannelPropertiesToJSON(value.channelProperties),
        'shipping_information': PaymentRequestShippingInformationToJSON(value.shippingInformation),
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(PaymentRequestBasketItemToJSON)),
        'customer_id': value.customerId,
        'customer': value.customer,
        'metadata': value.metadata,
    };
}

