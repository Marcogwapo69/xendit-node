/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { ChannelAmountLimits } from './ChannelAmountLimits';
import {
    ChannelAmountLimitsFromJSON,
    ChannelAmountLimitsFromJSONTyped,
    ChannelAmountLimitsToJSON,
} from './ChannelAmountLimits';
import type { ChannelCategory } from './ChannelCategory';
import {
    ChannelCategoryFromJSON,
    ChannelCategoryFromJSONTyped,
    ChannelCategoryToJSON,
} from './ChannelCategory';

/**
 * Channel information where you can send the money to
 * @export
 * @interface Channel
 */
export interface Channel {
    /**
     * Destination channel to send the money to, prefixed by ISO-3166 country code
     * @type {string}
     * @memberof Channel
     */
    channelCode: string;
    /**
     * 
     * @type {ChannelCategory}
     * @memberof Channel
     */
    channelCategory: ChannelCategory;
    /**
     * Currency of the destination channel using ISO-4217 currency code
     * @type {string}
     * @memberof Channel
     */
    currency: string;
    /**
     * Name of the destination channel
     * @type {string}
     * @memberof Channel
     */
    channelName: string;
    /**
     * 
     * @type {ChannelAmountLimits}
     * @memberof Channel
     */
    amountLimits: ChannelAmountLimits;
}

/**
 * Check if a given object implements the Channel interface.
 */
export function instanceOfChannel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "channelCode" in value;
    isInstance = isInstance && "channelCategory" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "channelName" in value;
    isInstance = isInstance && "amountLimits" in value;

    return isInstance;
}

export function ChannelFromJSON(json: any): Channel {
    return ChannelFromJSONTyped(json, false);
}

export function ChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Channel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelCode': json['channel_code'],
        'channelCategory': ChannelCategoryFromJSON(json['channel_category']),
        'currency': json['currency'],
        'channelName': json['channel_name'],
        'amountLimits': ChannelAmountLimitsFromJSON(json['amount_limits']),
    };
}

export function ChannelToJSON(value?: Channel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel_code': value.channelCode,
        'channel_category': ChannelCategoryToJSON(value.channelCategory),
        'currency': value.currency,
        'channel_name': value.channelName,
        'amount_limits': ChannelAmountLimitsToJSON(value.amountLimits),
    };
}

