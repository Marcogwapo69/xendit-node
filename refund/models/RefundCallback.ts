/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { RefundCallbackData } from './RefundCallbackData';
import {
    RefundCallbackDataFromJSON,
    RefundCallbackDataFromJSONTyped,
    RefundCallbackDataToJSON,
} from './RefundCallbackData';

/**
 * Callback for successful or failed Refunds made via the Payments API
 * @export
 * @interface RefundCallback
 */
export interface RefundCallback {
    /**
     * Identifies the event that triggered a notification to the merchant
     * @type {string}
     * @memberof RefundCallback
     */
    event: string;
    /**
     * business_id
     * @type {string}
     * @memberof RefundCallback
     */
    businessId: string;
    /**
     * 
     * @type {string}
     * @memberof RefundCallback
     */
    created: string;
    /**
     * 
     * @type {RefundCallbackData}
     * @memberof RefundCallback
     */
    data?: RefundCallbackData;
}

/**
 * Check if a given object implements the RefundCallback interface.
 */
export function instanceOfRefundCallback(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "event" in value;
    isInstance = isInstance && "businessId" in value;
    isInstance = isInstance && "created" in value;

    return isInstance;
}

export function RefundCallbackFromJSON(json: any): RefundCallback {
    return RefundCallbackFromJSONTyped(json, false);
}

export function RefundCallbackFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundCallback {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event': json['event'],
        'businessId': json['business_id'],
        'created': json['created'],
        'data': !exists(json, 'data') ? undefined : RefundCallbackDataFromJSON(json['data']),
    };
}

export function RefundCallbackToJSON(value?: RefundCallback | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event': value.event,
        'business_id': value.businessId,
        'created': value.created,
        'data': RefundCallbackDataToJSON(value.data),
    };
}

